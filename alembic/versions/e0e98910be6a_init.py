"""init

Revision ID: e0e98910be6a
Revises: 
Create Date: 2024-10-10 17:54:13.682734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e0e98910be6a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('permission', sa.Enum('show_user', 'manage_user', 'show_permission', 'manage_permission', 'show_role', 'manage_role', 'show_product', 'manage_product', 'show_orders', 'show_order', 'create_order', 'manage_order', 'show_server_log', name='permissionenum'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('quantity_in_stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('roles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role')
    )
    op.create_table('server_logs',
    sa.Column('module', sa.String(), nullable=True),
    sa.Column('method', sa.VARCHAR(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('success', 'field', name='logstatusenum'), nullable=False),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=100), nullable=True),
    sa.Column('user', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('permission', sa.Enum('show_user', 'manage_user', 'show_permission', 'manage_permission', 'show_role', 'manage_role', 'show_product', 'manage_product', 'show_orders', 'show_order', 'create_order', 'manage_order', 'show_server_log', name='permissionenum'), nullable=False),
    sa.ForeignKeyConstraint(['permission'], ['permissions.permission'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role'], ['roles.role'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role', 'permission')
    )
    op.create_table('users',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role'], ['roles.role'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('order',
    sa.Column('delivery_address', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('in_process', 'sent', 'delivered', name='orderstatusenum'), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'order_id', 'product_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_item')
    op.drop_table('order')
    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_table('server_logs')
    op.drop_table('roles')
    op.drop_table('product')
    op.drop_table('permissions')
    # ### end Alembic commands ###
